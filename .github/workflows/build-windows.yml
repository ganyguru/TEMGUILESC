name: Build Windows Executable

on:
  push:
    tags:
      - 'v*'  # This will trigger the workflow when you push a tag starting with 'v'
  workflow_dispatch:  # Allows manual triggering

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: write  # This is crucial for release creation

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: '3.9.13'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install -r requirements.txt
    
    - name: Create required directories
      run: |
        if (-not (Test-Path -Path "put_your_data_here")) { New-Item -Path "put_your_data_here" -ItemType Directory }
        if (-not (Test-Path -Path "processed_files")) { New-Item -Path "processed_files" -ItemType Directory }
        if (-not (Test-Path -Path "put_your_data_here\.placeholder")) { New-Item -Path "put_your_data_here\.placeholder" -ItemType File -Force }
        if (-not (Test-Path -Path "processed_files\.placeholder")) { New-Item -Path "processed_files\.placeholder" -ItemType File -Force }
        
    - name: Build with PyInstaller
      run: |
        pyinstaller --add-data "database.csv;." --add-data "FFTmodelv1.hdf5;." --add-data "logo.png;." --add-data "put_your_data_here\.placeholder;put_your_data_here/" --add-data "processed_files\.placeholder;processed_files/" --hidden-import=FFT --hidden-import=Graph --hidden-import=Heatmap --hidden-import=Temporalmap --hidden-import=PDF_export --hidden-import=DM3lib --hidden-import=ncempy --hidden-import=ncempy.io --hidden-import=ncempy.io.dm --hidden-import=skimage --hidden-import=skimage.transform --hidden-import=skimage.measure --hidden-import=tensorflow --hidden-import=tensorflow.keras --hidden-import=tensorflow.keras.models --onefile --noconsole GUI_Final.py
    
    # Skip the artifact upload for now and focus on releases
    
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dist/GUI_Final.exe
        draft: false
        prerelease: false
        name: Release ${{ github.ref_name }}
        body: |
          # LESC TEM GUI ${{ github.ref_name }}
          
          ## Installation Instructions
          1. Download the executable file
          2. Create two folders in the same directory as the executable:
             - `put_your_data_here` (for input files)
             - `processed_files` (for output)
          3. Run the executable
          
          ## Supported File Formats
          - .dm3
          - .dm4
          - .mrc
          - .emd
          - .ser
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
